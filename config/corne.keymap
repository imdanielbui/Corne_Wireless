/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include "dt-bindings/zmk/bt.h"
#include "dt-bindings/zmk/keys.h"
#include "dt-bindings/zmk/pointing.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 12 24 25 13 1 2 14 26 27 15 3 4 16 28 29 17 5 36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        mouse: mouse {
            compatible = "zmk,behavior-mouse-key-press";
            label = "MOUSE";
            #binding-cells = <1>;
        };

        mcla: mcla {
            compatible = "zmk,behavior-hold-tap";
            label = "MCLA";
            #binding-cells = <2>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            bindings = <&mouse>, <&mouse>;

            tapping-term-ms = <280>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &hmr F1 Q  &kp W  &hmr F3 E       &kp R  &hmr LC(LS(T)) T    &kp Y      &kp U   &hmr F8 I           &kp O    &hmr F12 P  &kp BSPC
&kp LEFT_SHIFT  &kp A      &kp S  &kp D           &kp F  &kp G               &kp H      &kp J   &kp K               &kp L    &kp SEMI    &kp SQT
&kp LCTRL       &kp Z      &kp X  &kp C           &kp V  &kp B               &kp N      &kp M   &kp COMMA           &kp DOT  &kp FSLH    &hmr CAPSLOCK ESC
                                  &hmr LALT LGUI  &mo 1  &kp ENTER           &kp SPACE  &tog 2  &hmr RS(RGUI) RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1              &kp N2     &kp N3      &kp N4       &kp N5           &kp N6           &kp N7         &kp N8       &kp N9           &kp N0             &kp DEL
&trans   &kp HOME            &kp GRAVE  &kp MINUS   &kp EQUAL    &kp END          &kp LEFT_ARROW   &kp DOWN       &kp UP       &kp RIGHT        &kp LBKT           &kp RBKT
&trans   &hmr K_REDO K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp LC(LS(B))    &kp PRINTSCREEN  &kp PAGE_DOWN  &kp PAGE_UP  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp K_MUTE
                                        &trans      &trans       &kp ENTER        &kp SPACE        &kp RGUI       &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F12  &kp F1      &kp F2        &kp F3        &kp F4        &kp F5          &kp F6          &kp F7          &kp F8        &kp F9           &kp F10                &kp F11
&trans   &kp C_PREV  &kp C_NEXT    &mkp LCLK     &mkp RCLK     &mouse MCLK     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp C_AC_FIND          &kp C_AC_CLOSE
&trans   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp C_AL_TASK_MANAGER  &kp ESC
                                   &kp K_POWER   &trans        &trans          &kp C_PP        &trans          &kp RALT
            >;
        };
    };
};
